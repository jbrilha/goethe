package components

type FormFill struct {
	Values     AccountFormValues
	RememberMe bool
	Errors     map[string]string
}

type AccountFormValues struct {
	Username     string
	Password     string
	Confirmation string
}

templ SignInForm() {
	<div
		hx-boost="true"
		hx-push-url="false"
		id="sign-in-form"
		class="absolute -right-1 -translate-x-5 -translate-y-px bg-white z-50"
		_="on click from elsewhere remove me"
	>
		{ children... }
	</div>
}

templ LoginForm(ff FormFill) {
	@SignInForm() {
		<form
			action="/login"
			method="post"
			hx-swap="outerHTML"
			hx-target="#sign-in-form"
			class="border border-black shadow-2xl p-4"
		>
			<div class="mb-2">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="username">
					Username
				</label>
				<input
					class="border border-black w-full p-2 text-gray-700 leading-tight focus:outline-none"
					id="username"
					name="username"
					type="text"
					placeholder="Username"
					value={ ff.Values.Username }
				/>
			</div>
			<div class="mb-2">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="password">
					Password
				</label>
				<input
					class="border border-black w-full p-2 text-gray-700 leading-tight focus:outline-none"
					id="password"
					name="password"
					type="password"
					placeholder="Password"
					value={ ff.Values.Password }
				/>
			</div>
			<div class="mb-2 flex items-center">
				<input id="remember-me" name="remember-me" type="checkbox" value="remember" if ff.RememberMe {
	checked
}/>
				<label class="text-gray-700 text-sm font-bold px-2" for="remember-me">
					Remember me
				</label>
			</div>
			<div class="text-red-400 text-sm mb-2">
				{ ff.Errors["INVALID_LOGIN"] }
			</div>
			<div id="login-form-buttons" class="flex items-center justify-between mt-2">
				<button
					class="border border-green-600 bg-green-400 hover:text-green-600 hover:bg-black text-black font-bold py-1 px-2"
				>
					Login
				</button>
				<a hx-target="#sign-in-form" hx-swap="outerHTML" href="/register">
					<button
						class="border border-gray-600 bg-gray-400 hover:text-gray-600 hover:bg-black text-black font-bold py-1 px-2"
					>
						Register
					</button>
				</a>
			</div>
		</form>
	}
}

templ RegisterForm(ff FormFill) {
	@SignInForm() {
		<form
			action="/register"
			method="post"
			hx-swap="outerHTML"
			hx-target="#sign-in-form"
			class="border border-black shadow-2xl p-4"
		>
			<div class="mb-2">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="username">
					Username
				</label>
				<input
					required
					class="border border-black w-full p-2 text-gray-700 leading-tight focus:outline-none"
					id="username"
					name="username"
					type="text"
					placeholder="Username"
					value={ ff.Values.Username }
				/>
				<div class="text-red-400 text-sm">
					{ ff.Errors["USER_EXISTS"] }
				</div>
			</div>
			<div class="mb-2">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="password">
					Password
				</label>
				<input
					required
					class="border border-black w-full p-2 text-gray-700 leading-tight focus:outline-none"
					id="password"
					name="password"
					type="password"
					placeholder="Password"
					value={ ff.Values.Password }
				/>
				<div class="text-red-400 text-sm">
					{ ff.Errors["PW_LEN"] }
				</div>
			</div>
			<div class="mb-2">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="confirmation">
					Password Confirmation
				</label>
				<input
					required
					class="border border-black w-full p-2 text-gray-700 leading-tight focus:outline-none"
					id="confirmation"
					name="confirmation"
					type="password"
					placeholder="Confirmation"
					value={ ff.Values.Confirmation }
				/>
				<div class="text-red-400 text-sm">
					{ ff.Errors["PW_CONF"] }
				</div>
			</div>
			<div class="mb-2 flex items-center">
				<input
					id="remember-me"
					name="remember-me"
					type="checkbox"
					value="remember"
					if ff.RememberMe {
						checked
					}
				/>
				<label class="text-gray-700 text-sm font-bold px-2" for="remember-me">
					Remember me
				</label>
			</div>
			<div id="register-form-buttons" class="flex items-center justify-between">
				<a hx-target="#sign-in-form" hx-swap="outerHTML" href="/login">
					<button
						class="border border-gray-600 bg-gray-400 hover:text-gray-600 hover:bg-black text-black font-bold py-1 px-2"
					>
						Login
					</button>
				</a>
				<button
					class="border border-green-600 bg-green-400 hover:text-green-600 hover:bg-black text-black font-bold py-1 px-2"
				>
					Register
				</button>
			</div>
		</form>
	}
}

templ BookForm() {
	<div class="max-w-xs px-5">
		<form
			id="book-form"
			hx-swap="beforeend"
			hx-target="#main"
			class="bg-yellow-200 shadow-2xl rounded p-6 mb-4"
		>
			<p class="text-xl font-bold mb-2">
				Add/remove a book
			</p>
			<div class="mb-4">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="title">
					Title
				</label>
				<input
					class="border border-black rounded w-full p-2 text-gray-700 leading-tight focus:outline-none"
					id="title"
					name="title"
					type="text"
					placeholder="Title"
				/>
			</div>
			<div class="mb-4">
				<label class="block text-gray-700 text-sm font-bold mb-2" for="author">
					Author
				</label>
				<input
					class="border border-black rounded w-full p-2 text-gray-700 leading-tight focus:outline-none"
					id="author"
					name="author"
					type="text"
					placeholder="Author"
				/>
			</div>
			<div class="flex items-center justify-between">
				<button
					class="border border-green-600 bg-green-400 hover:text-green-600 hover:bg-black text-black font-bold py-2 px-4"
					hx-post="/bookshelf/add-book"
				>
					Add
				</button>
				<button
					class="border border-red-600 bg-red-400 hover:text-red-600 hover:bg-black text-black font-bold py-2 px-4"
					hx-delete="/bookshelf/remove-book"
				>
					Remove
				</button>
			</div>
		</form>
	</div>
}
