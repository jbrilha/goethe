package blog

import (
	"fmt"
	"goethe/data"
	"goethe/util"
	"goethe/views/components"
	"goethe/views/layouts"
	"strconv"
)

templ SearchBar() {
	<div id="search-bar" class="flex justify-center m-2">
		<form action="/posts/search" method="get" hx-swap="outerHTML" hx-target="#posts" class="max-w-screen-sm w-full">
			<input
				class="border border-black p-2 text-gray-700 leading-tight rounded-full w-full focus:outline-black"
				id="query"
				name="q"
				type="search"
				placeholder="Search"
			/>
		</form>
	</div>
}

templ Posts(posts []data.Post) {
	<div id="posts" class="flex justify-center">
		<ul>
			for _, post := range posts {
				<li id={ fmt.Sprintf("post-%v", post.ID) } class="mb-4">
					@PostPreview(post)
				</li>
			}
		</ul>
	</div>
}

templ Index(posts []data.Post) {
	@layouts.Base() {
		<div class="absolute -right-1 -translate-x-5 translate-y-2">
			@components.CreatePostButton()
		</div>
		<div id="blog-page" hx-boost="true">
			@SearchBar()
			@Posts(posts)
		</div>
	}
}

templ PostPreview(p data.Post) {
	<article
		id="blog-post"
		class="container max-w-screen-md max-h-96 px-4 py-2 relative
        rounded-lg bg-gray-200 border-b-4 border-l-4 border-gray-300 shadow-md"
	>
		<div class="mb-2">
			<a
				class="mb-1 text-3xl font-bold line-clamp-2 hover:underline"
				hx-target="#base"
				href={ templ.URL(util.PathParams("/posts", p.ID)) }
			>
				{ p.Title }
			</a>
			<p class="text-xs">
				<a
					class="font-bold hover:underline"
					hx-target="#base"
					href={ templ.URL(util.PathParams("/profile",
                p.Creator)) }
				>
					{ p.Creator }
				</a>
				| { p.CreatedAt.Format("01-02-2006") }
			</p>
		</div>
		<div id="content" class="text-xl line-clamp-6">
			{ p.Content }
		</div>
		<!-- fade out: https://gist.github.com/drikusroor/aa48937c59b3d6123ca43ae9c660661d
            need "relative" up in the article otherwise it's applied to the entire page -->
		<div
			class="hidden after:rounded-lg after:absolute after:inset-x-0 after:bottom-0 after:h-16
            after:bg-gradient-to-b after:from-transparent after:to-gray-200"
		></div>
	</article>
}

templ Post(p data.Post) {
	@layouts.Base() {
		<div class="py-5 flex justify-center relative">
			<article
				id="blog-post"
				class="max-w-screen-md px-4 py-2 relative
				rounded-lg bg-gray-200 border-b-4 border-l-4 border-gray-300 shadow-2xl"
			>
				<div class="mb-2">
					<h1 class="text-3xl font-bold">
						{ p.Title }
					</h1>
				</div>
				<div class="text-xl">
					{ p.Content }
				</div>
				<div class="absolute -left-64 -top-0 mx-4">
					@PostInfoCard(p)
				</div>
			</article>
		</div>
	}
}

templ PostInfoCard(p data.Post) {
	<div
		id="info-card"
		hx-boost="true"
		class="container px-4 py-2 space-y-1 inline-block 
        rounded-lg bg-gray-200 border-b-2 border-l-2 border-gray-300 shadow-xl"
	>
		<a
			class="mb-1 text-xl font-bold hover:underline"
			hx-target="#base"
			href={ templ.URL(util.PathParams("/profile",
        p.Creator)) }
		>
			{ p.Creator }
		</a>
		<p class="text-xs">
			{ p.CreatedAt.Format("01-02-2006 @ 15:04") }
		</p>
		<p class="text-xs">
			Viewed { strconv.Itoa(p.Views) }
			if p.Views == 1 {
				time
			} else {
				times
			}
		</p>
		<div id="tags" class="flex justify-items-start flex-wrap max-w-48 bg-gray-400 rounded p-1">
			for _, tag := range p.Tags {
				<a hx-target="#base" hx-vals={ util.QueryParams("t", tag) } href={ templ.URL("/posts/search") }>
					<button id="tag" class="rounded-full bg-yellow-200 hover:font-bold px-2 m-1">
						{ tag }
					</button>
				</a>
			}
		</div>
	</div>
}

templ CreatorCard(u data.User) {
	<div
		class="container max-w-screen-md px-4 py-2
        rounded-lg bg-gray-200 border-b-2 border-l-2 border-gray-300 shadow-xl"
	>
		<div class="mb-2">
			<h1 class="mb-1 text-xl font-bold">
				{ u.Username }
			</h1>
			<p class="text-xs">
				Member since: { u.CreatedAt.Format("01-02-2006") }
			</p>
		</div>
	</div>
}

templ CreatePost() {
	@layouts.Base() {
		<div class="py-5 flex justify-center">
			<div hx-boost="true" class="container max-w-screen-md px-5">
				<form
					id="post-form"
					action="/posts/create"
					method="post"
					hx-target="#base"
					hx-push-url="false"
					class="bg-gray-200 shadow-2xl rounded p-6 mb-4"
				>
					<div class="mb-4">
						<input
							required
							autofocus
							class="text-xl font-bold border border-black rounded w-full p-2 text-gray-700 leading-tight"
							id="title"
							name="title"
							type="text"
							placeholder="Title"
						/>
					</div>
					<div class="mb-4 flex items-center">
						<span class="text-xl mr-2">#</span>
						<input
							id="tag-input"
							name="new-tag"
							type="text"
							class="border border-black rounded w-full p-2 text-gray-700 max-w-40"
							placeholder="Add a tag"
							_="on keydown
                                if event.key is 'Enter'
                                    event.preventDefault()
                                    call addTag(my value)
                                end"
						/>
						<div id="tags" class="flex justify-items-start flex-wrap"></div>
					</div>
					<input hidden type="text" name="tags" id="input-tags" value=""/>
					<div class="mb-4">
						<textarea
							required
							rows="10"
							class="border border-black rounded w-full p-2 text-gray-700 leading-tight"
							id="content"
							name="content"
							type="text"
							placeholder="What are you writing about?"
						></textarea>
					</div>
					<div class="flex items-end">
						<button
							class="border border-green-600 bg-green-400 hover:text-green-600 hover:bg-black text-black font-bold py-2 px-4"
						>
							Post
						</button>
					</div>
				</form>
			</div>
		</div>
		<script src="/public/scripts/tags.js" defer></script>
	}
}

templ Tag(tag string) {
	<div id="tag" class="flex items-stretch rounded-full bg-yellow-200 px-1 m-1">
		<div class="px-2 flex items-center">
			<span>#</span>
			<p id="tag-name">
				{ tag }
			</p>
		</div>
		<button
			id="remove-tag"
			class="h-full flex-grow-0 px-2 border-l border-black hover:font-bold"
			type="button"
			_="on click
                call removeTag((previous <p#tag-name/>).innerText)
                then remove the closest #tag"
		>
			&times;
		</button>
	</div>
}
